---
title: "viz.qmd"
format: html
editor: visual
---

# Synopsis

This file tracks the works related to the visualizations for the golem app. Renv is not working well with r2u for binary on Ubuntu.

The strategy is to combine sf and leaflet and R6 to make a simple dashboard that shows the Chloropleth for all states across time.

Features: Let you choose cut offs for binning the colors? This is because some counties have very high number of a numeric variable and letting automatic interpolation of color will make everything else washed out.

```{r}
library(here)
library(data.table)
library(dplyr)
library(leaflet)
library(sf)
list.files(here("data"))
```

```{r}
d <- fread(here("data", "county_court-issued_2000_2018.csv"))
d[, fips_char := stringr::str_pad(fips_county, width = 5, side = "right", pad = "0")]

fst::write_fst(d, here::here("data", "temp", "county_court-issued_2000_2018.fst"))
dd <- readxl::read_xlsx(here("data", "county_proprietary_2000_2018_codebook.xlsx"))
```

# Wrangling

-   Get the boundaries of counties as an sf object
-   Keep only the counties available in the eviction data

```{r}
library(sf)
# Download the counties geojson
# counties_geojson <-
#   geojsonio::geojson_read(
#     "https://raw.githubusercontent.com/plotly/datasets/master/geojson-counties-fips.json",
#     what = "sp"
#   )
# saveRDS(counties_geojson,
#         here::here("data", "temp", "counties_geojson_sp.rds"))

counties_geojson <- readRDS(here::here("data", "temp", "counties_geojson_sp.rds"))

# Convert to sf object
counties_geojson_shp <- st_as_sf(counties_geojson)
st_write(counties_geojson_shp, here::here("data", "temp", "counties_geojson_sf.shp"))
```

```{r}
counties_geojson_shp <- st_read(here::here("data", "temp", "counties_geojson_sf.shp"))
bins <- c(0, 10, 20, 50, 100, 200, 500, 1000, Inf)
pal <- colorBin("YlOrRd", domain = d$renting_hh, bins = bins)

counties_geojson_shp |> 
  inner_join(d[year == 2017, ], by = c("id" = "fips_char")) #|> 
  leaflet() %>%
  addTiles()  %>%
  addPolygons(
    stroke = FALSE, 
    smoothFactor = 0.3, 
    fillColor = ~pal(renting_hh),
    fillOpacity = 0.7,
    label = ~renting_hh,
  ) |> addLegend(pal = pal, values = ~renting_hh, opacity = 0.7, title = NULL,
  position = "bottomright")
```

# Testing
```{r}
for(i in list.files(here::here("golem", "R"), full.names = TRUE)) {
  source(i)
}

class(d_obj)
d_obj <- CountyData$new(here::here("data", "temp", "county_court-issued_2000_2018.fst"))
d_obj$get(2018)

geo_obj <- CountyGEO$new(here::here("data", "temp", "counties_geojson_sf.shp"))
geo_obj$get(d_obj$get(2017))
geo_obj$set_joined_shp(d_obj$get(2019))
geo_obj$joined_shp

inner_join(as_tibble(d), counties_geojson_shp, by = c("fips_char" = "id"))
merge(counties_geojson_shp, d[year == 2017], by.y = "fips_char", by.x = "id")

a <- list()
a[[]]
```

